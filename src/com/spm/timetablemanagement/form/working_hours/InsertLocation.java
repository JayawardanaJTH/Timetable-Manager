/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.spm.timetablemanagement.form.working_hours;

import javax.swing.JComboBox;

/**
 *
 * @author Tiran Harsha
 */
public class InsertLocation extends javax.swing.JPanel {

    /**
     * Creates new form InsertWorkingHours
     */
    public InsertLocation() {
        initComponents();
        ent.getTransaction().begin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        ent = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("timetablemanagement?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        buildingQuery = java.beans.Beans.isDesignTime() ? null : ent.createQuery("SELECT b FROM Building b");
        buildingList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(buildingQuery.getResultList());
        roomQuery = java.beans.Beans.isDesignTime() ? null : ent.createQuery("SELECT r FROM Room r");
        roomList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(roomQuery.getResultList());
        ent1 = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("timetablemanagement?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        jLabel1 = new javax.swing.JLabel();
        AddBuilding = new javax.swing.JButton();
        bID = new javax.swing.JTextField();
        bName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        UpdateB = new javax.swing.JButton();
        DeleteB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bTable = new javax.swing.JTable();

        jLabel1.setText("Buildings");

        AddBuilding.setText("Add Building");
        AddBuilding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBuildingActionPerformed(evt);
            }
        });

        bID.setToolTipText("");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), bID, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        bID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bIDActionPerformed(evt);
            }
        });

        bName.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.name}"), bName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel3.setText("ID");

        jLabel4.setText("Name");

        UpdateB.setText("Update");
        UpdateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBActionPerformed(evt);
            }
        });

        DeleteB.setText("Delete");
        DeleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, buildingList, bTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);

        jScrollPane1.setViewportView(bTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(AddBuilding, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(UpdateB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(AddBuilding)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpdateB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void AddBuildingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBuildingActionPerformed

       try{
          Building b = new Building();
          
          int i = Integer.parseInt(bID.getText());
          
          b.setId(i);
          b.setName(bName.getText());
          ent.persist(b);
          buildingList.add(b);
          
          int row = buildingList.size() -1;
          bTable.setRowSelectionInterval(row, row);
       }catch(Exception e){
       }
           
    }//GEN-LAST:event_AddBuildingActionPerformed

    private void bIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bIDActionPerformed

    private void UpdateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBActionPerformed
        try{
          ent.getTransaction().commit();
          ent.getTransaction().begin();
          refreshData();
       }catch(Exception e){
       }
        
        
        
    }//GEN-LAST:event_UpdateBActionPerformed

    private void DeleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBActionPerformed
        try{
          int row = bTable.getSelectedRow();
          row = bTable.convertRowIndexToModel(row);
          ent.remove(buildingList.get(row));
          ent.getTransaction().commit();
          ent.getTransaction().begin();
          refreshData();
       }catch(Exception e){
       }
    }//GEN-LAST:event_DeleteBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBuilding;
    private javax.swing.JButton DeleteB;
    private javax.swing.JButton UpdateB;
    private javax.swing.JTextField bID;
    private javax.swing.JTextField bName;
    private javax.swing.JTable bTable;
    private java.util.List<com.spm.timetablemanagement.form.working_hours.Building> buildingList;
    private javax.persistence.Query buildingQuery;
    private javax.persistence.EntityManager ent;
    private javax.persistence.EntityManager ent1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private java.util.List<com.spm.timetablemanagement.form.working_hours.Room> roomList;
    private javax.persistence.Query roomQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void refreshData() {
        try{
          buildingList.clear();
          buildingList.addAll(buildingQuery.getResultList());
       }catch(Exception e){
       }
    }
}
